#ifndef LAB1_BOOK_H
#define LAB1_BOOK_H

#include <iostream>
/*
 * ДИСКЛЕЙМЕР
 * любые названия могут отличаться от того, что мы делали на паре
 * любые способы реализации могут отличаться от тех, что мы делали на паре
 */

// Это заголовочный файл. Здесь находится обьявление (перечисление) полей и методов класса Книга аka Book


class Book {
    std::string title;              // поля класса Книга: название,
    std::string author;            // автор,
    unsigned int pages;           // количество страниц,
    unsigned int mark;           // номер страницы, которая помечена закладкой :)

public:

    Book(std::string title, std::string author, unsigned int pages);   // конструктор, создает книгу с заданными полями
    Book() : pages(0), mark(0) {};                                    // конструктор по умолчанию, создает пустую книгу

    unsigned int getPages();                  // этот метод возвращает количество страниц заданной книги
    unsigned int getMark();                  // этот метод возвращает страницу закладки заданной книги
    std::string getTitle();                 // этот метод возвращает название заданной книги
    std::string getAuthor();               // этот метод возвращает автора заданной книги

    void setMark(unsigned int mark);            // этот метод устанавливает закладку на заданной странице
    void setTitle(std::string title);          // этот метод добавляет книге название
    void setAuthor(std::string author);       // этот метод добавляет книге автора
    void setPages(unsigned int pages);       // этот метод устанавливает количество страниц
    void writeBook();                       // этот метод выводит книгу


    ~Book();                           // деструктор -- удаляет заданную книгу


};

#endif


//// Штука, которую я в итоге решила не использовать, можно не читать)

//    /*
//     * это переопределение оператора сравнения
//     * когда мы пишем а == b
//     * на самом деле происходит
//     * вызов специальной функции от левого операнда а
//     * которая в качестве параметра принимает правый операнд b
//     * a.operator==(b)
//     * эта функция возвращает true если а = b
//     * но сравнивать Книги программа не умеет, сравнение "==" работает только с встроенными типами
//     * (числа, строки и т д)
//     * для книг надо определить сравнение отдельно
//     *
//     * слова const запрещают менять значения которыми мы оперируем
//     *
//     * rhs это правый операнд
//     */
//    bool operator==(const Book &rhs) const;
